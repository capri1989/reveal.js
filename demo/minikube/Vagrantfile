disk1 = './disks/disk1.vdi'
disk2 = './disks/disk2.vdi'
disk3 = './disks/disk3.vdi'

Vagrant.configure("2") do |config|
  config.vm.box = "bento/ubuntu-16.04"
  config.vm.define "minikube" do |kube|
  config.vm.provider "virtualbox" do |vb|
      vb.memory = "4096"
      vb.cpus = "4"
  end

  config.vm.network "forwarded_port",
      guest: 30000,
      host:  30000,
      auto_correct: true

  config.vm.network "forwarded_port",
      guest: 80,
      host:  80,
      auto_correct: true

  config.vm.network "forwarded_port",
      guest: 443,
      host:  443,
      auto_correct: true  
  config.vm.provider "virtualbox" do |v|
    v.customize ['createhd', '--filename', disk1, '--size', 10 * 1024]
    v.customize ['createhd', '--filename', disk2, '--size', 10 * 1024]
    v.customize ['createhd', '--filename', disk3, '--size', 10 * 1024]
    v.customize ['storageattach', :id, '--storagectl', 'SATA Controller', '--port', 1, '--device', 0, '--type', 'hdd', '--medium', disk1]
    v.customize ['storageattach', :id, '--storagectl', 'SATA Controller', '--port', 2, '--device', 0, '--type', 'hdd', '--medium', disk2]
    v.customize ['storageattach', :id, '--storagectl', 'SATA Controller', '--port', 3, '--device', 0, '--type', 'hdd', '--medium', disk3]
  end

    config.vm.provision "kubectl", type: "shell",  inline: <<-SCRIPT
echo "Installing kubectl"
apt-get -qq update && apt-get install -qqy apt-transport-https
curl -s https://packages.cloud.google.com/apt/doc/apt-key.gpg | apt-key add -
echo "deb http://apt.kubernetes.io/ kubernetes-xenial main" > /etc/apt/sources.list.d/kubectl.list
apt-get update -qq
apt-get install -qqy kubectl
sudo apt-get install -y bash-completion
sudo kubectl completion bash >/etc/bash_completion.d/kubectl
SCRIPT


    config.vm.provision "docker", type: "shell", inline: <<-SCRIPT
sudo apt-get remove docker docker-engine docker.io
sudo apt-get install \
    apt-transport-https \
    ca-certificates \
    curl \
    software-properties-common
curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -
sudo add-apt-repository \
   "deb [arch=amd64] https://download.docker.com/linux/ubuntu \
    $(lsb_release -cs) \
    stable"
sudo apt-get update -qq
#sudo apt-get install -yqq docker-ce=18.06.0~ce~3-0~ubuntu
sudo apt-get install -yqq docker-ce
usermod -aG docker vagrant
sudo docker run hello-world
SCRIPT

    config.vm.provision "minikube", type: "shell", inline: <<-SCRIPT
echo "Downloading minikube"
curl -Lo minikube https://storage.googleapis.com/minikube/releases/latest/minikube-linux-amd64 && chmod +x minikube && sudo mv minikube /usr/local/bin/
SCRIPT

    config.vm.provision "k8s", type: "shell", inline: <<-SCRIPT
echo "Setting up and starting K8S"
minikube start --vm-driver none
#minikube dashboard --url
sudo cp -r /root/.minikube /root/.kube /home/vagrant
sudo chown -R vagrant: /home/vagrant
perl -pi -e 's:/root/:/home/vagrant/:' /home/vagrant/.kube/config
kubectl cluster-info

SCRIPT
    config.vm.provision "Clone rook", type: "shell", inline: <<-SCRIPT
echo "Cloning rook..."
git clone -b summit https://github.com/mkoderer/rook.git 
sudo chown vagrant: root
SCRIPT
  end

end
